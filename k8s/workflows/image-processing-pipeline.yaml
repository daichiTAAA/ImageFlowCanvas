apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: image-processing-pipeline-
  namespace: argo
spec:
  entrypoint: main-pipeline
  
  # MinIOをアーティファクトリポジトリとして使用
  artifactRepositoryRef:
    configMap: artifact-repositories
    key: default-v1

  # ワークフローが受け取る引数
  arguments:
    parameters:
    - name: input-image-path
      value: "raw/test-image.jpg"
    - name: pipeline-config
      value: |
        {
          "components": [
            {
              "name": "resize",
              "type": "resize",
              "parameters": {
                "width": 800,
                "height": 600,
                "maintain_aspect": true
              }
            },
            {
              "name": "ai_detection",
              "type": "ai_detection",
              "parameters": {
                "model": "yolov8n.pt",
                "confidence": 0.5,
                "draw_boxes": true
              },
              "dependencies": ["resize"]
            },
            {
              "name": "filter",
              "type": "filter",
              "parameters": {
                "filter_type": "blur",
                "intensity": 1.0
              },
              "dependencies": ["ai_detection"]
            }
          ]
        }

  templates:
  # メインパイプライン（DAG形式）
  - name: main-pipeline
    dag:
      tasks:
        # ステップ1: リサイズ処理
        - name: resize-step
          template: resize-template
          arguments:
            parameters:
            - name: input-path
              value: "{{workflow.parameters.input-image-path}}"
            - name: output-filename
              value: "{{workflow.name}}-resized.jpg"

        # ステップ2: AI物体検出処理
        - name: ai-detection-step
          dependencies: [resize-step]
          template: ai-detection-template
          arguments:
            parameters:
            - name: input-path
              value: "{{tasks.resize-step.outputs.parameters.output-path}}"
            - name: output-filename
              value: "{{workflow.name}}-detected.jpg"

        # ステップ3: フィルタ処理
        - name: filter-step
          dependencies: [ai-detection-step]
          template: filter-template
          arguments:
            parameters:
            - name: input-path
              value: "{{tasks.ai-detection-step.outputs.parameters.output-path}}"
            - name: output-filename
              value: "{{workflow.name}}-filtered.jpg"

  # リサイズ処理テンプレート
  - name: resize-template
    inputs:
      parameters:
      - name: input-path
      - name: output-filename
    outputs:
      parameters:
      - name: output-path
        value: "processed/{{inputs.parameters.output-filename}}"
      artifacts:
      - name: result
        path: /tmp/result.json
    container:
      image: imageflow/resize-app:latest
      command: [python, resize.py]
      args:
        - "--input-bucket=imageflow-files"
        - "--input-path={{inputs.parameters.input-path}}"
        - "--output-bucket=imageflow-files"
        - "--output-path={{outputs.parameters.output-path}}"
        - "--width=800"
        - "--height=600"
        - "--maintain-aspect=true"
      env:
        - name: MINIO_ENDPOINT
          value: "minio-service.default.svc.cluster.local:9000"
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"

  # AI物体検出テンプレート
  - name: ai-detection-template
    inputs:
      parameters:
      - name: input-path
      - name: output-filename
    outputs:
      parameters:
      - name: output-path
        value: "processed/{{inputs.parameters.output-filename}}"
      artifacts:
      - name: result
        path: /tmp/result.json
    container:
      image: imageflow/object-detection-app:latest
      command: [python, detect.py]
      args:
        - "--input-bucket=imageflow-files"
        - "--input-path={{inputs.parameters.input-path}}"
        - "--output-bucket=imageflow-files"
        - "--output-path={{outputs.parameters.output-path}}"
        - "--model=yolov8n.pt"
        - "--confidence=0.5"
        - "--draw-boxes=true"
      env:
        - name: MINIO_ENDPOINT
          value: "minio-service.default.svc.cluster.local:9000"
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"

  # フィルタ処理テンプレート
  - name: filter-template
    inputs:
      parameters:
      - name: input-path
      - name: output-filename
    outputs:
      parameters:
      - name: output-path
        value: "processed/{{inputs.parameters.output-filename}}"
      artifacts:
      - name: result
        path: /tmp/result.json
    container:
      image: imageflow/filter-app:latest
      command: [python, filter.py]
      args:
        - "--input-bucket=imageflow-files"
        - "--input-path={{inputs.parameters.input-path}}"
        - "--output-bucket=imageflow-files"
        - "--output-path={{outputs.parameters.output-path}}"
        - "--filter-type=blur"
        - "--intensity=1.0"
      env:
        - name: MINIO_ENDPOINT
          value: "minio-service.default.svc.cluster.local:9000"
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"